server:
  port: 1019

spring:
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8888/realms/bankapp
        registration:
          bankapp:
            provider: keycloak
            authorization-grant-type: client_credentials
            client-id: bankapp
            client-secret: Xih8xBTW8WuoJvBRFzuhQ8DXbxdONfec
            scope:
              - profile
            client-authentication-method: client_secret_post
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: bankapp
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      spring.json.trusted.packages: "*"
      spring.json.use.type.headers: false
      spring.json.value.default.type: org.company.exchangegenerator.dto.CurrencyDto
management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
    liquibase:
      access: read_only
  endpoints:
    web:
      exposure:
        include: "*"
logging:
  level:
    org.company: DEBUG
    liquibase: INFO

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/